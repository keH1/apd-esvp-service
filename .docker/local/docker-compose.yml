services:
  mkcert:
    environment:
      - domain=*.${PROJECT_DOMAIN},${PROJECT_DOMAIN},vite.${PROJECT_DOMAIN},traefik.${PROJECT_DOMAIN}
    container_name: mkcert
    volumes:
      - "./.docker/local/traefik/ssl:/root/.local/share/mkcert"
    image: vishnunair/docker-mkcert

  traefik:
    build:
      context: .
      dockerfile: .docker/local/traefik/Dockerfile
    container_name: traefik
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    labels:
      - 'traefik.enable=true'
      - "traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-traefik-dashboard.rule=Host(`traefik.${PROJECT_DOMAIN}`)"
      - "traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-traefik-dashboard.priority=10"
      - "traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-traefik-dashboard.tls=true"
      - "traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-traefik-dashboard.service=api@internal"
      - "traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-traefik-dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"
    depends_on:
      - nginx
    image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${ENVIRONMENT_NAME}/traefik
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - "./.docker/local/traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./.docker/local/traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro"
      - "./.docker/local/traefik/ssl:/etc/traefik/ssl:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - proxy
      - backend

  php:
    build:
      context: .
      dockerfile: .docker/local/php/Dockerfile
    depends_on:
      - postgres
    environment:
      PHP_IDE_CONFIG: serverName=${PHP_IDE_CONFIG_SERVER_NAME}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    hostname: api.${PROJECT_NAME}.local
    image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/local/php
    volumes:
      - "./:/var/www/html"
      - "./.data/composer:/root/.composer"
    networks:
      - proxy
      - backend

  scheduler:
    build:
      context: .
      dockerfile: .docker/local/php/Dockerfile
    depends_on:
      - php
    environment:
      PHP_IDE_CONFIG: serverName=${PHP_IDE_CONFIG_SERVER_NAME}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/local/scheduler
    command: ["php", "artisan", "schedule:work"]
    volumes:
      - "./:/var/www/html"
      - "./.data/composer:/root/.composer"
    networks:
      - backend

  nginx:
    build:
      context: .
      dockerfile: .docker/local/nginx/Dockerfile
    depends_on:
      - php
    image: ${CI_REGISTRY}/${CI_PROJECT_PATH}/local/nginx
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-nginx-main.rule=Host(`${PROJECT_DOMAIN}`)'
      - 'traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-nginx-main.entrypoints=websecure'
      - 'traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-nginx-main.tls=true'

      - 'traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-nginx-subdomains.rule=HostRegexp(`^.+\.${PROJECT_DOMAIN}`) && 
      !Host(`traefik.${PROJECT_DOMAIN}`) && !Host(`vite.${PROJECT_DOMAIN}`)'
      - 'traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-nginx-subdomains.entrypoints=websecure'
      - 'traefik.http.routers.${TRAEFIK_ROUTER_PREFIX}-nginx-subdomains.tls=true'
    volumes:
      - "./:/var/www/html"
      - "./.docker/local/nginx/etc/default.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - proxy
      - backend

  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    hostname: ${POSTGRES_HOSTNAME}
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - "./.data/postgres:/var/lib/postgresql/data"
    networks:
      - proxy
      - backend

networks:
  proxy:
    driver: bridge
  backend:
    driver: bridge
    internal: true
